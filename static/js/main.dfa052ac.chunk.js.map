{"version":3,"sources":["components/Header.js","services/HeaderService.js","utils/constants.js","components/children/Item.js","components/List.js","utils/ajax.js","containers/Shop.js","Errors/ErrorBoundary.js","App.js","serviceWorker.js","utils/interceptors.js","index.js"],"names":["Header","props","menus","console","log","className","href","brandName","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","map","element","key","name","link","placeholder","LABELS","Item","style","width","src","item","url","alt","price","List","items","length","getData","axios","URL","get","timeout","Shop","state","this","localStorage","setState","JSON","parse","response","data","stringify","undefined","React","Component","ErrorBoundary","isError","errorMessage","err","info","children","App","Boolean","window","location","hostname","match","defaults","baseURL","headers","post","token","tokenId","interceptors","request","use","loadSettings","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.dfa052ac.chunk.js","sourcesContent":["import React from 'react';\r\nimport { HeaderService } from '../services/HeaderService';\r\nexport const Header = (props)=>{\r\n    const menus = HeaderService()['menu'];\r\n    console.log('Menus ',menus);\r\n\r\n\r\nreturn (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <a className=\"navbar-brand\" href=\"/#\">{props.brandName}</a>\r\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span className=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n  <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    <ul className=\"navbar-nav mr-auto\">\r\n        {menus.map(element=>{return (\r\n            <li key ={element.name} className=\"nav-item active\">\r\n            <a className=\"nav-link\" href={element.link}>{element.name} <span className=\"sr-only\">(current)</span></a>\r\n          </li>\r\n)})}\r\n      {/* <li className=\"nav-item active\">\r\n        <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <a className=\"nav-link\" href=\"#\">Link</a>\r\n      </li> */}\r\n\r\n\r\n    </ul>\r\n    <form className=\"form-inline my-2 my-lg-0\">\r\n      <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n      <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n    </form>\r\n  </div>\r\n</nav>\r\n);\r\n}","\r\nexport const HeaderService= ()=>{\r\n      return {\r\n          \"menu\":[\r\n              {\"name\": \"Home\",\"link\":\"/\"},\r\n              {\"name\": \"About\",\"link\":\"/about\"},\r\n              {\"name\": \"Topselling\",\"link\":\"/topselling\"}\r\n          ]\r\n      }             \r\n}"," export const LABELS = {\r\n    BRANDNAME:'Brain mentors'\r\n}\r\n","import React from 'react';\r\n export const Item = (props)=>{\r\n     const myStyle= {\r\n         width:'18rem'\r\n     };\r\n      return(\r\n        <div className=\"card\" style={myStyle}>\r\n        <img src={props.item.url} className=\"card-img-top\" alt=\" No Image Found\"/>\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">{props.item.id}</h5>\r\n          <p className=\"card-text\">{props.item.name}</p>\r\n          <p className=\"card-text\">{props.item.price}</p>\r\n          <a href=\"#\" className=\"btn btn-primary\">Add to Cart</a>\r\n        </div>\r\n      </div>\r\n      )\r\n } ","import React from 'react';\r\nimport { Item } from './children/Item';\r\nexport const List = (props)=>{\r\n    console.log('Props are ::::::',props, ' typeof ',typeof props.items);\r\n    //return (<h1>fghdsgfjds</h1>)\r\n    let len = props.items.length;\r\n    if(props.items && props.items.length>0){\r\n    return (\r\n        <>\r\n        {props.items.map(item=>{\r\n            return (<Item key = {item.id}item = {item}/>);\r\n        })}\r\n        </>\r\n\r\n    );\r\n    }\r\n    else{\r\n        return (<div>No Record Found....</div>)\r\n    }\r\n\r\n}","import axios from 'axios';\r\n//GET - query string\r\n// url?name = amitandcompany = brainmentor\r\n//get = path param\r\n//url /amit/company = brainmentors \r\nexport function getData(){\r\n    console.log('axios object is ',axios);\r\n    // let token = localStorage.tokenId;\r\nconst URL = '/myserverdata/master/mobiles.json'; \r\n\r\nconst options= {\r\n    method:'get', // post,put,delete\r\n    url: URL,\r\n    timeout:5000,\r\n    maxContentLength:10000,\r\n   /* data:{ // only valid in post eg shown in upper e.g.\r\n        price:1000,\r\n        qt:2\r\n    }*/\r\n}\r\n// 1st mechanism for get data\r\n//var promise = axios(options);\r\n//2nd mechanism for get data by axios.\r\n\r\n// const axiosObject = axios.create({\r\n//     baseURL:'https://raw.githubusercontent.com',\r\n//     headers:{'Content-Type':'application/xml'},\r\n//     method:'post'\r\n// });\r\n// axiosObject.interceptors.request.use(request=>{\r\n//     return request;\r\n// });\r\n//var p1 = axiosObject.get(URL);\r\n\r\n\r\n/// remove interceptors\r\n//axios.interceptors.request.eject(requestInterceptor);\r\nvar promise = axios.get(URL,{timeout:5000});\r\nreturn promise;\r\n// promise.then(response=>{\r\n//     console.log('Response of Axios is', response);\r\n\r\n// }).catch(err=>{\r\n//     console.log('Error is ',err);\r\n// }).finally(()=>{\r\n//     console.log('this code always run');\r\n// });\r\n}","import React from 'react';\r\nimport { Header } from '../components/Header';\r\nimport { LABELS } from '../utils/constants';\r\nimport { List } from '../components/List';\r\nimport {getData} from '../utils/ajax';\r\nexport class Shop extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {items:[]};\r\n        console.log('Shop Constructor call');\r\n    }\r\n    \r\n    /*shouldComponentUpdate(prevProps, prevState) {\r\n    console.log('Prev State is ',prevState);\r\n    }*/\r\n    \r\n    /*\r\n    static async getDerivedStateFromProps(props, state){\r\n        console.log('Shop ',this);\r\n        if( localStorage.items){\r\n        //this.setState({items:localStorage.items});\r\n        state = {items:JSON.parse(localStorage.items)['mobiles']};\r\n        }\r\n        else{\r\n        var response= await getData();\r\n        console.log('Response on Life Cycle '\r\n        ,response.data['mobiles']);\r\n        localStorage.items =\r\n        JSON.stringify(response.data);\r\n        state = {items:response.data['mobiles']};\r\n        //this.setState({items:response.data['mobiles']});\r\n        }\r\n        // promise.then(response=>{\r\n        //     console.log('Response of Axios is ',response);\r\n        //     }).catch(err=>{\r\n        //     console.log('Error is ',err);\r\n        //     }).finally(()=>{\r\n        //     console.log('this code always run');\r\n        //     });\r\n        console.log('getDerivedStateFromProps Call ',state\r\n        , ' Props ',props );\r\n        return state;\r\n    }*/\r\n    /*\r\n    UNSAFE_componentWillMount(){\r\n        setTimeout(()=>{\r\n            console.log('I am Async and i call later');\r\n            this.setState({msg:'Set'});\r\n        },5000);\r\n        // Call (AJAX ) Async + setState\r\n        console.log('Will Mount Call');\r\n    }*/\r\n    render(){\r\n        console.log('Render Call :::::: ',this.state.items);\r\n        return (<div>\r\n                <h1 className='alert-info text-center'>Shop Demo</h1>\r\n                <Header brandName = {LABELS.BRANDNAME}/>\r\n                <List items = {this.state.items}/>\r\n            </div>);\r\n    }\r\n    async componentDidMount(){\r\n        console.log('componentWillMount:::::');\r\n        if( localStorage.items){\r\n            this.setState({items:\r\n                JSON.parse(localStorage.items)['mobiles']});\r\n            //state = {items:JSON.parse(localStorage.items)['mobiles']};\r\n            }\r\n            else{\r\n            var response= await getData();\r\n            console.log('Response on Life Cycle '\r\n            ,response.data['mobiles']);\r\n            localStorage.items =\r\n            JSON.stringify(response.data);\r\n            //state = {items:response.data['mobiles']};\r\n           // this.setState({items:response.data['mobiles']});\r\n           this.setState({items:undefined});\r\n            }\r\n        // setTimeout(()=>{\r\n        //     console.log('I am Async and i call later');\r\n        //     this.setState({msg:'Set'});\r\n        // },5000);\r\n        // console.log('Did Mount');\r\n    }\r\n    }","import React from 'react';\r\nexport class ErrorBoundary extends React.Component{\r\n    constructor(props){\r\n    super(props);\r\n    this.state = {isError:false,errorMessage:''};\r\n    }\r\n    componentDidCatch(err,info){\r\n        console.log('Component Did Catch Call::: Error Boundary ',err,info);\r\n        this.setState({isError:true,errorMessage:'Oops Something went Wrong'});\r\n    }\r\nrender(){\r\n    if(this.state.isError){\r\n        return(\r\n            <div>\r\n                <h1>{this.state.errorMessage}</h1>\r\n            </div>\r\n        );\r\n    }\r\n    else{\r\n        return this.props.children;\r\n    }\r\n}\r\n}\r\n","import React from 'react';\nimport { Shop } from './containers/Shop';\nimport { ErrorBoundary } from './Errors/ErrorBoundary';\n\nconst App = (props)=>{\n  return (\n    <div className='container'>\n      <ErrorBoundary>\n      <Shop/>\n      </ErrorBoundary>\n    \n    </div>\n  );\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import axios from 'axios';\r\nexport function loadSettings(){\r\n    console.log('load setting is 333333333333333333333333333333');\r\naxios.defaults.baseURL = 'https://raw.githubusercontent.com/brainmentorspvtltd';\r\naxios.defaults.headers.post['Content-Type']='application/json';\r\nvar token = localStorage.tokenId;\r\nvar requestInterceptor = axios.interceptors.request.use(request=>{\r\n    request.tokenId = token;\r\n    console.log('Request Interceptors is Running',request.tokenId);\r\n    return request;\r\n});\r\naxios.interceptors.response.use(response=>{\r\n    response.headers['secure']='Brain Mentors Headers';\r\n    console.log('Resonse Interceptor is Running');\r\n    return response;\r\n});\r\n}\r\n//export default axios;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {loadSettings} from './utils/interceptors';\nloadSettings();\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}